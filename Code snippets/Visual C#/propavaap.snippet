<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Avalonia MVVM attached  property</Title>
      <Author>Ivan Stoychev</Author>
      <Description>Inserts an Avalonia attached property.</Description>
      <Shortcut>propavaap</Shortcut>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Code Language="CSharp"
            Kind="method decl">
        <![CDATA[public static readonly AttachedProperty<$Type$> $PropertyName$Property =
            AvaloniaProperty.RegisterAttached<$OwnerType$, $HostType$, $Type$>(nameof("$PropertyName$"));

        public static $Type$ Get$PropertyName$($HostType$ element)
        {
            return element.GetValue($PropertyName$Property);
        }

        public static void Set$PropertyName$($HostType$ element, $Type$ value)
        {
            element.SetValue($PropertyName$Property, value);
        }]]>
      </Code>
      <Declarations>
        <Literal>
          <ID>PropertyName</ID>
          <ToolTip>What you want the property to be called.</ToolTip>
          <Default>PropertyName</Default>
        </Literal>
        <Literal>
          <ID>Type</ID>
          <ToolTip>What should the property's data type be.</ToolTip>
          <Default>string</Default>
        </Literal>
        <Literal>
          <ID>OwnerType</ID>
          <ToolTip>The class that is registering the property (usually the class the property is defined in).</ToolTip>
          <Default>ClassNamePlaceholder</Default>
          <Function>ClassName()</Function>
        </Literal>
        <Literal>
          <ID>HostType</ID>
          <ToolTip>The class that the property is to be registered on.</ToolTip>
          <Default>Control</Default>
        </Literal>
      </Declarations>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>